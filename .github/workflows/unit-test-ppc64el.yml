name: CI-unit-test-ppc64el

on:
  pull_request:
    branches: [ "master" ]

  push:
    branches:
      - master

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  unit-test-matrix-relwithdebinfo-and-debug:
    strategy:
      fail-fast: false
      matrix:
        name: [grid, dumpers-loaders, coordinate, settings, approximation, complex]
    runs-on: ubuntu-latest
    name: Unit test ppc64el ubuntu 22.04 for ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ubuntu
        run: |
          sudo apt install gcc-powerpc64le-linux-gnu g++-powerpc64le-linux-gnu qemu-user-static debootstrap
      - name: Build and Run
        run: |
          export ROOTFS=${GITHUB_WORKSPACE}/rootfs/ppc64el
          sudo ./create-ubuntu-rootfs.sh ppc64el jammy
          TOOLCHAIN_VER=$(ls $ROOTFS/usr/include/c++/)
          sed -i "s,set(TOOLCHAIN_VERSION \"9\"),set(TOOLCHAIN_VERSION \"$TOOLCHAIN_VER\")," ppc64el-gcc-toolchain.cmake
          ./Tools/test-units.sh ${GITHUB_WORKSPACE} ${GITHUB_WORKSPACE}/Build "${GITHUB_WORKSPACE}/Tools/UnitTests/native/build-and-run-unit-test-${{ matrix.name }}.sh" "powerpc64le-linux-gnu-gcc,powerpc64le-linux-gnu-g++" "" "" "" "f d" "ppc64el-gcc-toolchain.cmake"

  unit-test-layout:
    strategy:
      matrix:
        cxx11: [ON, OFF]
        complex_values: [ON, OFF]
        value_type: [f, d]
    runs-on: ubuntu-latest
    name: Unit test ppc64el ubuntu 22.04 for layout
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ubuntu
        run: |
          sudo apt install gcc-powerpc64le-linux-gnu g++-powerpc64le-linux-gnu qemu-user-static debootstrap
      - name: Build and Run
        run: |
          export ROOTFS=${GITHUB_WORKSPACE}/rootfs/ppc64el
          sudo ./create-ubuntu-rootfs.sh ppc64el jammy
          TOOLCHAIN_VER=$(ls $ROOTFS/usr/include/c++/)
          sed -i "s,set(TOOLCHAIN_VERSION \"7\"),set(TOOLCHAIN_VERSION \"$TOOLCHAIN_VER\")," ppc64el-gcc-toolchain.cmake
          ./Tools/test-units.sh ${GITHUB_WORKSPACE} ${GITHUB_WORKSPACE}/Build "${GITHUB_WORKSPACE}/Tools/UnitTests/native/build-and-run-unit-test-layout.sh" "powerpc64le-linux-gnu-gcc,powerpc64le-linux-gnu-g++" "RelWithDebInfo" "${{ matrix.cxx11 }}" "${{ matrix.complex_values }}" "${{ matrix.value_type }}" "ppc64el-gcc-toolchain.cmake"

  unit-test-internalscheme:
    strategy:
      matrix:
        cxx11: [ON, OFF]
        complex_values: [ON, OFF]
    runs-on: ubuntu-latest
    name: Unit test ppc64el ubuntu 22.04 for internalscheme
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ubuntu
        run: |
          sudo apt install gcc-powerpc64le-linux-gnu g++-powerpc64le-linux-gnu qemu-user-static debootstrap
      - name: Build and Run
        run: |
          export ROOTFS=${GITHUB_WORKSPACE}/rootfs/ppc64el
          sudo ./create-ubuntu-rootfs.sh ppc64el jammy
          TOOLCHAIN_VER=$(ls $ROOTFS/usr/include/c++/)
          sed -i "s,set(TOOLCHAIN_VERSION \"7\"),set(TOOLCHAIN_VERSION \"$TOOLCHAIN_VER\")," ppc64el-gcc-toolchain.cmake
          ./Tools/test-units.sh ${GITHUB_WORKSPACE} ${GITHUB_WORKSPACE}/Build "${GITHUB_WORKSPACE}/Tools/UnitTests/native/build-and-run-unit-test-internalscheme.sh" "powerpc64le-linux-gnu-gcc,powerpc64le-linux-gnu-g++" "RelWithDebInfo" "${{ matrix.cxx11 }}" "${{ matrix.complex_values }}" "f d" "ppc64el-gcc-toolchain.cmake"
